{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_TO_CART } from '../actions/cartActions';\nconst initState = {\n  items: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  if (action.type === ADD_TO_CART) {\n    return _objectSpread({}, state, {\n      items: [...state.items, action.product]\n    });\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/Jayp/workspaces/ecommerce/ecommerce_storefront/reducers/cartReducer.js"],"names":["ADD_TO_CART","initState","items","total","cartReducer","state","action","type","product"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,6BACKK,KADL;AAEEH,MAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAFT;AAID,GALD,MAKO;AACL,WAAOH,KAAP;AACD;AACF,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { ADD_TO_CART } from '../actions/cartActions';\r\n\r\nconst initState = {\r\n  items: [],\r\n  total: 0\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  if (action.type === ADD_TO_CART) {\r\n    return {\r\n      ...state,\r\n      items: [...state.items, action.product]\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}