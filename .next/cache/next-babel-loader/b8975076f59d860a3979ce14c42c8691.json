{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar backend = axios.create({\n  baseURL: publicRuntimeConfig.BACKEND_URL,\n  headers: {\n    'x-api-key': publicRuntimeConfig.BACKEND_APIKEY,\n    'Content-type': 'application/json'\n  }\n});\nexport var getProducts = function getProducts() {\n  return _regeneratorRuntime.async(function getProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(backend.get('/products'));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\nexport var getProductById = function getProductById(id) {\n  var _ref, data;\n\n  return _regeneratorRuntime.async(function getProductById$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('getProductById', id);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(backend.get(\"/products/\".concat(id)));\n\n        case 3:\n          _ref = _context2.sent;\n          data = _ref.data;\n          console.log('getProductById p', data);\n          return _context2.abrupt(\"return\", data);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Jayp/workspaces/ecommerce/ecommerce_storefront/apis/backend.js"],"names":["axios","getConfig","publicRuntimeConfig","backend","create","baseURL","BACKEND_URL","headers","BACKEND_APIKEY","getProducts","get","getProductById","id","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;iBACgCA,SAAS,E;IAAjCC,mB,cAAAA,mB;;AAER,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAEH,mBAAmB,CAACI,WADF;AAE3BC,EAAAA,OAAO,EAAE;AACP,iBAAaL,mBAAmB,CAACM,cAD1B;AAEP,oBAAgB;AAFT;AAFkB,CAAb,CAAhB;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACZN,OAAO,CAACO,GAAR,CAAY,WAAZ,CADY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAMC,EAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,EAA9B;AAD4B;AAAA,2CAELT,OAAO,CAACO,GAAR,qBAAyBE,EAAzB,EAFK;;AAAA;AAAA;AAEpBG,UAAAA,IAFoB,QAEpBA,IAFoB;AAG5BF,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,IAAhC;AAH4B,4CAIrBA,IAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import axios from 'axios';\r\nimport getConfig from 'next/config';\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nconst backend = axios.create({\r\n  baseURL: publicRuntimeConfig.BACKEND_URL,\r\n  headers: {\r\n    'x-api-key': publicRuntimeConfig.BACKEND_APIKEY,\r\n    'Content-type': 'application/json'\r\n  }\r\n});\r\n\r\nexport const getProducts = async () => {\r\n  return await backend.get('/products');\r\n};\r\n\r\nexport const getProductById = async id => {\r\n  console.log('getProductById', id);\r\n  const { data } = await backend.get(`/products/${id}`);\r\n  console.log('getProductById p', data);\r\n  return data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}