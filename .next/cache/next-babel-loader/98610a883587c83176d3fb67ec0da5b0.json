{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART } from '../actions/cartActions';\nvar initState = {\n  items: [],\n  total: 0\n};\n\nvar cartReducer = function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ADD_TO_CART) {\n    return _objectSpread({}, state, {\n      items: [].concat(_toConsumableArray(state.items), [action.product])\n    });\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/Jayp/workspaces/ecommerce/ecommerce_storefront/reducers/cartReducer.js"],"names":["ADD_TO_CART","initState","items","total","cartReducer","state","action","type","product"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,wBAA5B;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,KAAK,EAAE;AAFS,CAAlB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,WAApB,EAAiC;AAC/B,6BACKK,KADL;AAEEH,MAAAA,KAAK,+BAAMG,KAAK,CAACH,KAAZ,IAAmBI,MAAM,CAACE,OAA1B;AAFP;AAID,GALD,MAKO;AACL,WAAOH,KAAP;AACD;AACF,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { ADD_TO_CART } from '../actions/cartActions';\r\n\r\nconst initState = {\r\n  items: [],\r\n  total: 0\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  if (action.type === ADD_TO_CART) {\r\n    return {\r\n      ...state,\r\n      items: [...state.items, action.product]\r\n    };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}